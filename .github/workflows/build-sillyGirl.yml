# 傻妞编译
name: Build sillyGirl

# 环境变量设置
env:
  GOLANG_VERSION: 1.17

# 触发编译的条件
on:
#  release:
#    types: [published]
#  #推送带v的tag触发
#  push:
#    tags:
#      - 'v*'
#  #主分支触发
#  branches:
#    - master
#  #定时器触发
#  schedule:
#    - cron: 0 8 * * 5
  #star触发
  watch:
    types: [started]
  #curl触发
  repository_dispatch:
    types: sillyGirl

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: debug
        run: |
          echo ${GOLANG_VERSION}

      - name: Checkout
        uses: actions/checkout@master
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOLANG_VERSION }}

          #go-version: '^1.17' # The Go version to download (if necessary) and use.
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install bison ed gawk gcc libc6-dev make
      - name: Clone source code
        run: |
          git clone --depth=1 https://github.com/cdle/sillyGirl.git /home/runner/go/src/github.com/cdle/sillyGirl
      - name: Build Firmware
        run: |
          cp $GITHUB_WORKSPACE/sillyGirl/dev.go /home/runner/go/src/github.com/cdle/sillyGirl/
          cd /home/runner/go/src/github.com/cdle/sillyGirl/develop
          git clone https://github.com/ufuckee/jd_cookie
          cd /home/runner/go/src/github.com/cdle/sillyGirl
          go build
          mkdir -p /opt/images
          sudo mv -f /home/runner/go/src/github.com/cdle/sillyGirl/sillyGirl /opt/images/
      - name : Upload packages
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: sillyGirl
          path: /opt/images/

  release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Validates GO releaser config
        uses: docker://goreleaser/goreleaser:latest
        with:
          args: check

      - name: Create release on GitHub
        uses: docker://goreleaser/goreleaser:latest
        with:
          args: release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}